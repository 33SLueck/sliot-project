name: Simple Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          # Copy files to server
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='postgres-data' \
            ./ ec2-user@${{ secrets.EC2_HOST }}:~/sliot-project/
          
          # Run deployment on server
          ssh ec2-user@${{ secrets.EC2_HOST }} "
            cd ~/sliot-project
            
            # Configure AWS credentials if available
            if [ -n '${{ secrets.AWS_ACCESS_KEY_ID }}' ]; then
              export AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}'
              export AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}'
              export AWS_REGION='eu-north-1'
            fi
            
            # Run simplified deployment
            ./deploy-simple.sh prod
          "

      - name: Verify deployment
        run: |
          echo 'Waiting for services to stabilize...'
          sleep 30
          
          # Simple connectivity check
          if curl -f --max-time 10 https://sliot.de >/dev/null 2>&1; then
            echo '✅ Frontend is accessible'
          else
            echo '⚠️  Frontend may still be starting'
          fi
          
          if curl -f --max-time 10 https://n8n.sliot.de >/dev/null 2>&1; then
            echo '✅ n8n is accessible'
          else
            echo '⚠️  n8n may still be starting'
          fi
          
          echo '🎉 Deployment completed successfully!'