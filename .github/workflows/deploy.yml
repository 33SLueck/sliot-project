name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/nextjs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 120s
        command_timeout: 20m
        script: |
          cd /home/ec2-user/sliot-project
          echo "=== Pulling Latest Code ==="
          git pull origin main

          echo "=== Fetching Secrets from AWS Parameter Store ==="
          export COGNITO_CLIENT_ID=$(aws ssm get-parameter --name '/sliot-project/cognito-client-id' --query 'Parameter.Value' --output text --region eu-north-1)
          export COGNITO_CLIENT_SECRET=$(aws ssm get-parameter --name '/sliot-project/cognito-client-secret' --with-decryption --query 'Parameter.Value' --output text --region eu-north-1)
          export COGNITO_ISSUER=$(aws ssm get-parameter --name '/sliot-project/cognito-issuer' --query 'Parameter.Value' --output text --region eu-north-1)
          export NEXTAUTH_SECRET=$(aws ssm get-parameter --name '/sliot-project/nextauth-secret' --with-decryption --query 'Parameter.Value' --output text --region eu-north-1)
          export NEXTJS_POSTGRES_PASSWORD=$(aws ssm get-parameter --name '/sliot-project/nextjs-postgres-password' --with-decryption --query 'Parameter.Value' --output text --region eu-north-1)
          export N8N_POSTGRES_PASSWORD=$(aws ssm get-parameter --name '/sliot-project/n8n-postgres-password' --with-decryption --query 'Parameter.Value' --output text --region eu-north-1)

          cat > .env.production << EOF
COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID
COGNITO_CLIENT_SECRET=$COGNITO_CLIENT_SECRET
COGNITO_ISSUER=$COGNITO_ISSUER
NEXTAUTH_SECRET=$NEXTAUTH_SECRET
NEXTJS_POSTGRES_PASSWORD=$NEXTJS_POSTGRES_PASSWORD
N8N_POSTGRES_PASSWORD=$N8N_POSTGRES_PASSWORD
EOF

          echo "=== Running Deploy Script ==="
          chmod +x deploy.sh
          ./deploy.sh