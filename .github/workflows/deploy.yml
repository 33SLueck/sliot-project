name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ec2-16-16-134-76.eu-north-1.compute.amazonaws.com
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 60s
        command_timeout: 15m
        debug: true
        script: |
          # Create project directory if it doesn't exist
          sudo mkdir -p /home/ubuntu/sliot-project
          sudo chown ubuntu:ubuntu /home/ubuntu/sliot-project
          
          # Navigate to project directory
          cd /home/ubuntu/sliot-project
          
          # Clone or update repository
          if [ ! -d ".git" ]; then
            git clone https://github.com/33SLueck/sliot-project.git .
          else
            git pull origin main
          fi
          
          # Install Docker and Docker Compose if not already installed
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker ubuntu
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            # Restart shell to apply docker group
            sudo systemctl restart docker
            # Wait for docker to be ready
            sleep 10
          fi
          
          # Create necessary directories
          mkdir -p postgres-data
          
          # Clean up any existing containers
          docker-compose -f docker-compose.yml -f docker-compose.local-build.yml down --remove-orphans || true
          
          # Build and start services locally
          echo "Building and starting services locally..."
          docker-compose -f docker-compose.yml -f docker-compose.local-build.yml up -d --build
          
          # Clean up old images
          docker image prune -f
          
          # Show status
          docker-compose ps
          
          # Show logs for debugging
          docker-compose logs --tail=50